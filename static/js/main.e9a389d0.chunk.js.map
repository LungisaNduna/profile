{"version":3,"sources":["Components/smallComponents/UnsplashLink.js","Components/TemplateComponents/Header.js","Components/TemplateComponents/AboutMe.js","Components/ProjectComponents/GithubProjectCard.js","Components/ProjectComponents/GithubProjectContainer.js","Repositories/githubProject.Repository.js","Components/smallComponents/ImageModal.js","App.js","index.js","Resources/LungisaProfile.jpg","Resources/CareerPlan.png"],"names":["UnsplashLink","this","props","linkAddress","Artist","title","className","href","target","rel","xmlns","viewBox","d","Component","Header","src","LungisaProfile","alt","AboutMe","id","onClick","openModal","GithubProjectCard","projInfo","has_pages","console","log","pagesLink","html_url","logoSourceUrl","language","map","liveLink","GithubProjectContainer","githubProjects","proj","ProjectRepository","githubRepoData","formatRawData","allRepos","forEach","repo","getLogoSource","name","getPagesLink","push","specialConciderations","repoData","projName","filterHighlightProjects","highlightedProjectNames","highlightProjectList","projects","project","includes","returnProjectList","returnHighlightProjectList","highlightedProjects","ImageModal","show","style","position","top","bottom","left","right","backgroundColor","padding","borderRadius","margin","GrowthPlan","onClose","App","toggleModal","setState","showImageModal","state","document","displayMode","gitDisplayReady","ghProjRepository","fetch","then","response","json","parsedJSON","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e9a389d0.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport class UnsplashLink extends Component {\r\n    render() {\r\n        const {linkAddress, Artist} = this.props;\r\n        const title = `Download free do whatever you want high-resolution photos from ${Artist}`;\r\n        return (\r\n            <a className=\"photoLink\" href={linkAddress} target=\"_blank\" rel=\"noopener noreferrer\" title={title}>\r\n                <span className=\"photolink_span1\">\r\n                    <svg className=\"photoLink_svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\r\n                        <title>unsplash-logo</title>\r\n                        <path d=\"M10 9V0h12v9H10zm12 5h10v18H0V14h10v9h12v-9z\"></path>\r\n                    </svg>\r\n                </span>\r\n                <span className=\"photoLink_span2\">photo by {Artist}</span>\r\n            </a>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UnsplashLink\r\n","import React, { Component } from 'react'\r\nimport LungisaProfile from '../../Resources/LungisaProfile.jpg';\r\nimport UnsplashLink from '../smallComponents/UnsplashLink';\r\nexport class Header extends Component {\r\n\r\n    render(){\r\n        //for speech component look into https://www.npmjs.com/package/react-speech\r\n        return(\r\n            <header className=\"App-header\">\r\n                \r\n                <h1>Lungisa Nduna</h1>\r\n                <img className=\"ProfilePic\" src={LungisaProfile} alt=\"Lungisa's face\" />\r\n                <p>This is my profile page standing in as my online resume.</p>\r\n\r\n                {/* a link to the creator of the image which is free for use */}\r\n                <div className=\"photoCredit\">\r\n                    <UnsplashLink linkAddress=\"https://unsplash.com/@_louisreed?utm_medium=referral&utm_campaign=photographer-credit&utm_content=creditBadge\" Artist=\"Louis Reed\" />\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\n\r\nexport class AboutMe extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\" id=\"AboutMeDiv\">\r\n                <p>I am a software developer that attended <a href=\"https://www.wethinkcode.co.za/\" target=\"_blank\">WeThinkCode</a> and currently works at Britehouse.</p>\r\n                <p>My plan is to become a Solution Architect and am upskilling in accordance with my <span className=\"clickableText\" onClick={this.props.openModal}>growth plan</span></p>\r\n                <p>I enjoy problem solving, playing both sports and games (computer and board), as well as biking</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AboutMe;\r\n","import React, { Component } from 'react'\r\n\r\nexport class GithubProjectCard extends Component {\r\n\r\n    render() {\r\n        const { projInfo } = this.props;\r\n        if (projInfo.has_pages) { console.log(projInfo.pagesLink); }\r\n        return (\r\n            <div className=\"projCard\">\r\n                <a className=\"projCardContainer\" href={projInfo.html_url} target=\"_blank\">\r\n                    <img className=\"projectLogo\" src={projInfo.logoSourceUrl}/>\r\n                    <div className=\"languages\">\r\n                        {projInfo.language.map(language => <p className=\"language\">{language}</p>) }\r\n                    </div>\r\n                </a>\r\n                {projInfo.has_pages && \r\n                    <div className=\"pagesLink\">\r\n                        <a href={projInfo.liveLink} target=\"_blank\">Check out the webpage</a>\r\n                    </div>\r\n                }                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GithubProjectCard\r\n","import React, { Component } from 'react'\r\nimport {GithubProjectCard} from \"./GithubProjectCard\";\r\nimport UnsplashLink from '../smallComponents/UnsplashLink';\r\n\r\nexport class GithubProjectContainer extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n       const {githubProjects} = this.props; \r\n        return (\r\n            <div className=\"container\" id=\"GithubProjContainer\">\r\n                {/* Just placing a header */}\r\n                <h1>Some Projects I've Done</h1>\r\n                {/* mapping a project card for each project we have data for */}\r\n                <div  id=\"GithubProjSection\">\r\n                    {githubProjects.map(proj => <GithubProjectCard projInfo={proj}/>)}\r\n                </div>\r\n                {/* the link from Unsplash. Got the component and the */}\r\n                <UnsplashLink linkAddress=\"https://unsplash.com/@mxhpics?utm_medium=referral&amp;utm_campaign=photographer-credit&amp;utm_content=creditBadge\" Artist=\"Maxime Horlaville\" />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GithubProjectContainer\r\n","import $ from 'jquery';\r\n\r\nexport default class ProjectRepository{\r\n    constructor(githubRepoData){\r\n        this.projects = this.formatRawData(githubRepoData);\r\n    }\r\n\r\n    formatRawData = (githubRepoData) => {\r\n        let allRepos = [];\r\n        githubRepoData.forEach(repo => {\r\n            repo['logoSourceUrl'] = this.getLogoSource(repo.name);\r\n            if (repo.has_pages) {\r\n                repo[\"liveLink\"] = this.getPagesLink(repo.name);\r\n            }\r\n            repo.language = (repo.language === \"JavaScript\") ? ['JS'] : [repo.language];\r\n            allRepos.push(this.specialConciderations(repo));\r\n        });\r\n        return allRepos;\r\n    }\r\n\r\n    specialConciderations = (repoData) => {\r\n        if (repoData.name === \"digital-cards\") { repoData.language = [\"HTML\"];}\r\n        if (repoData.name === \"profile\") { repoData.language.push(\"React\"); repoData.has_pages = false; }\r\n        return repoData;\r\n    }\r\n\r\n    /* Need to resolve this issue\r\n    checkResource = (url) =>{ \r\n        return new Promise(function(resolve, reject){\r\n            $.get(url).done( resolve(url)).fail( reject(null))\r\n        });\r\n    }*/\r\n\r\n    getLogoSource = (projName) => {\r\n        // this works because I upload a logo image with each repo\r\n        // my logo is always a .png file named logo.png and sits at the root of the repo\r\n        // one can have local files but that seemed like a lot of maintanance to update and I am lazy\r\n        return `https://github.com/LungisaNduna/${projName}/blob/master/logo.png?raw=true`;\r\n        \r\n    }\r\n\r\n\r\n\r\n    getPagesLink = (projName) => {\r\n        return `https://lungisanduna/github.io/${projName}/`;\r\n    }\r\n\r\n    filterHighlightProjects = (highlightedProjectNames) =>{\r\n        let highlightProjectList = [];\r\n\r\n        this.projects.forEach(project => {\r\n            if (highlightedProjectNames.includes(project.name)){\r\n                highlightProjectList.push(project);\r\n            }\r\n        });\r\n        return highlightProjectList;\r\n    }\r\n\r\n    returnProjectList = () => this.projects;\r\n    returnHighlightProjectList = (highlightedProjects) => this.filterHighlightProjects(highlightedProjects);\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport GrowthPlan from '../../Resources/CareerPlan.png'\r\n\r\nexport class ImageModal extends Component {\r\n\r\n  render() {\r\n    // Render nothing if the \"show\" prop is false\r\n    if(!this.props.show) {\r\n      return null;\r\n    }\r\n\r\n    // The gray background\r\n    const backdropStyle = {\r\n      position: 'fixed',\r\n      top: 0,\r\n      bottom: 0,\r\n      left: 0,\r\n      right: 0,\r\n      backgroundColor: 'rgba(0,0,0,0.3)',\r\n      padding: 50\r\n    };\r\n\r\n    // The modal \"window\"\r\n    const modalStyle = {\r\n      backgroundColor: '#fff',\r\n      borderRadius: 5,\r\n      margin: '0 auto',\r\n      padding: 30\r\n    };\r\n\r\n    return (\r\n      <div className=\"backdrop\" style={backdropStyle}>\r\n        <div className=\"modal\" style={modalStyle}>\r\n         \r\n          <img id=\"growthPlan\" src={GrowthPlan} alt=\"my personal growth plan\"/>\r\n          <span className=\"ImageSpaceError\">The Picture resolution of the image will not work for this screen size</span>\r\n\r\n          <div className=\"footer\">\r\n            <button onClick={this.props.onClose}>\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nImageModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  show: PropTypes.bool,\r\n  children: PropTypes.node\r\n};\r\n\r\n    \r\n    export default ImageModal;\r\n","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport { Header } from './Components/TemplateComponents/Header';\r\nimport AboutMe from './Components/TemplateComponents/AboutMe';\r\nimport GithubProjectContainer from './Components/ProjectComponents/GithubProjectContainer';\r\nimport ProjectRepository from './Repositories/githubProject.Repository';\r\n\r\nimport { image } from './Resources/LungisaProfile.jpg';\r\nimport ImageModal from './Components/smallComponents/ImageModal';\r\n\r\nexport class App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    document.title = \"Lungisa Nduna\"\r\n    this.state = {\r\n      displayMode : 0,\r\n      gitDisplayReady : false,\r\n      ghProjRepository : null,\r\n      showImageModal : false,\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch(`https://api.github.com/users/LungisaNduna/repos`)\r\n        .then(response => response.json())\r\n        .then(parsedJSON => new ProjectRepository(parsedJSON))\r\n        .then(ghProjRepository => {\r\n            this.setState({ ghProjRepository });\r\n            this.setState({ gitDisplayReady : true })\r\n        })\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({ showImageModal: !this.state.showImageModal });\r\n  }\r\n\r\n  render() {\r\n    const {ghProjRepository} = this.state;\r\n    const highlightGHProjects = [\"profile\", \"digital-cards\", \"push_swap\", \"UnityFundamentals\", \"filler\"];\r\n    return (\r\n      <div className=\"App\">\r\n        \r\n        <Header />\r\n        \r\n        <AboutMe openModal={this.toggleModal} /> \r\n        \r\n        { this.state.gitDisplayReady && \r\n          <GithubProjectContainer \r\n            githubProjects={ghProjRepository.returnHighlightProjectList(highlightGHProjects)}\r\n          />\r\n        }\r\n\r\n        <ImageModal \r\n          show={this.state.showImageModal}\r\n          onClose={this.toggleModal}\r\n        />\r\n      \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","module.exports = __webpack_public_path__ + \"static/media/LungisaProfile.a5424aec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CareerPlan.298ad351.png\";"],"sourceRoot":""}